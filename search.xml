<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>安装Hexo博客教程</title>
    <url>/2022/06/09/%E5%AE%89%E8%A3%85HEXO%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<p>前言<br>一、准备GIthub仓库<br>二、本地安装git<br>三、本地安装node.js<br>四、本地安装Hexo<br>五、搭建博客<br>六、部署到Github<br>前言<br>去年就有在 Github 搭建博客的想法，但是因为工作太忙搁置了，昨天想起来这事儿，于是网上各种查阅资料，感觉虽然搭建方式比较多，但都不是很全，走了很多弯路，折腾了我一天，才终于搭建好了自己的 GIthub 博客，在此记录梳理一下，希望可以帮到大家，欢迎交流！</p>
<p>博客采用的是Hexo框架（因为支持Markdown语法），使用的是Butterfly主题，搭建过程中的参考链接如下：</p>
<p>Hexo 官方文档：<a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a><br>Hexo 官方主题：<a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>Butterfly 主题 GIthub：<a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a><br>Butterfly 主题doc（主要包含主题配置及一些自定义）：<a href="https://butterfly.js.org/archives/">https://butterfly.js.org/archives/</a></p>
<p>最终效果：<a href="https://wuqiuxu.github.io/">https://wuqiuxu.github.io</a></p>
<p>一、准备GIthub仓库<br>首先你需要在 Github 有一个自己的账号</p>
<p>进入个人主页可以看到Repositories，点击进入仓库</p>
<p>新建一个 Github 仓库，仓库名称填写github用户名.github.io（ps：因为我已经搭建过了，所以下图会出现仓库已存在的警告）</p>
<p>点击最下方的Create repository提交仓库</p>
<p>仓库生成后，复制自己的仓库地址，后续部署的时候需要（如果仓库里面没有文件，进入之后就是图一的样子，否则是图二，红框里就是地址）</p>
<p>二、本地安装git<br>Mac 系统：brew install git<br>其他系统可参考官网：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br>三、本地安装node.js<br>安装 nvm<br>Mac系统：brew install nvm<br>其他系统可参考官网：<a href="https://nodejs.org/zh-cn/download">https://nodejs.org/zh-cn/download</a></p>
<p>配置环境变量：vim <del>&#x2F;.zshrc<br>export NVM_DIR&#x3D;</del>&#x2F;.nvm<br>source $(brew –prefix nvm)&#x2F;nvm.sh<br>生效环境变量：source ~&#x2F;.zshrc<br>查看 node.js 的可用版本：nvm ls-remote<br>安装 node.js（版本需不低于 10.13，官方建议使用 Node.js 12.0 及以上版本）：nvm install v16.20.0</p>
<p>使用指定版本：nvm use v16.20.0<br>指定每次启动终端所使用的版本：nvm alias default v16.20.0<br>四、本地安装Hexo<br>安装 Hexo：npm install -g hexo-cli（这里提示可以更新npm版本，可以更新一下：npm install -g <a href="mailto:&#110;&#x70;&#x6d;&#x40;&#57;&#x2e;&#x37;&#x2e;&#49;">&#110;&#x70;&#x6d;&#x40;&#57;&#x2e;&#x37;&#x2e;&#49;</a>）</p>
<p>五、搭建博客<br>准备一个文件夹：mkdir blog<br>初始化：hexo init blog</p>
<p>进入文件夹：cd blog<br>安装：npm install</p>
<p>查看生成的文件：ls</p>
<p>克隆 butterfly 主题仓库：git clone -b master <code>https://github.com/jerryc127/hexo-theme-butterfly.git</code> themes&#x2F;butterfly，然后在 themes 下就会多一个主题目录</p>
<p>修改blog目录下的 _config.yml（注意不是主题目录下的_config.yml），把 theme 的值改为 butterfly</p>
<p>配置主题，可以参考这篇文章：<a href="https://butterfly.js.org/posts/4aa8abbe/%EF%BC%88%E8%BF%99%E4%B8%80%E6%AD%A5%E5%8F%AF%E4%BB%A5%E5%85%88%E8%B7%B3%E8%BF%87%EF%BC%8C%E7%AD%89%E6%90%AD%E5%BB%BA%E5%A5%BD%E4%B9%8B%E5%90%8E%E5%86%8D%E4%BF%AE%E6%94%B9%EF%BC%89">https://butterfly.js.org/posts/4aa8abbe/（这一步可以先跳过，等搭建好之后再修改）</a><br>生成文章：hexo new post “文章标题”，然后就可以在 blog&#x2F;source&#x2F;_posts 下生成的md文件编写了（这一步也可以先跳过，等搭建好之后再来写）<br>生成静态文件 public（每次修改主题配置后都需要重新生成）：hexo generate，缩写hexo g</p>
<p>启动本地服务器：hexo server，缩写hexo s（访问地址为：<a href="http://localhost:4000/%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%9C%A8%E6%9C%AC%E5%9C%B0%E6%9F%A5%E7%9C%8B%E9%A1%B5%E9%9D%A2%EF%BC%8Cctrl">http://localhost:4000/，可以在本地查看页面，ctrl</a> + c可以结束服务）</p>
<p>清除缓存文件 db.json 和已生成的静态文件 public ：hexo clean，缩写hexo cl<br>有时候对站点的更改不生效，可能需要先运行该命令再重新生成文件</p>
<p>六、部署到Github<br>修改blog目录下的 _config.yml（注意不是主题下的_config.yml）<br>a. type 类型配置为 git<br>b. repo 那里配置为自己的Github仓库地址</p>
<p>按照yml文件格式要求，:后面必须留有一个空格</p>
<p>安装一键部署插件：npm install hexo-deployer-git –save</p>
<p>一键部署到Github：hexo deploy ，缩写hexo d</p>
<p>PS：</p>
<p>更新butterfly主题后报错extends includes&#x2F;layout.pug block content（网上方法没解决的可以来看看）<br>百度出来的解决方法都是一样的</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p>就很隔路，别人都解决了就我没解决，甚至错误都没有变，一点反馈都没有 &#x3D; _ &#x3D;<br>化悲愤为食欲，吃了顿饭，心情好了，回来 重新看了一遍终端输出信息，果然发现一些可以操作的细节</p>
<p>作为一名合格的LSP 码农，之前本能地无视风险继续安装了<br>反正也没有什么办法了，fix一下试试吧</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm aduit fix</span><br><span class="line">npm aduit fix --force</span><br></pre></td></tr></table></figure>



<p>接下来就是常规的清除缓存，生成文件，“开机”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>建站</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
